{"ast":null,"code":"var _jsxFileName = \"/Users/saiharshithasivalingala/Desktop/react-frontend/src/components/ContactForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { getFormStructure, submitFormData } from '../services/api';\nimport FormField from './FormField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactForm = () => {\n  _s();\n  const [formStructure, setFormStructure] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitResult, setSubmitResult] = useState(null);\n  useEffect(() => {\n    const fetchFormStructure = async () => {\n      try {\n        const response = await getFormStructure();\n        setFormStructure(response.form);\n\n        // Initialize form data with empty values\n        const initialData = {};\n        response.form.fields.forEach(field => {\n          initialData[field.name] = '';\n        });\n        setFormData(initialData);\n      } catch (error) {\n        console.error('Error loading form:', error);\n      }\n    };\n    fetchFormStructure();\n  }, []);\n  const handleFieldChange = (fieldName, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitResult(null);\n    try {\n      const result = await submitFormData(formData);\n      setSubmitResult({\n        success: true,\n        message: result.message\n      });\n      // Reset form if submission was successful\n      const resetData = {};\n      Object.keys(formData).forEach(key => {\n        resetData[key] = '';\n      });\n      setFormData(resetData);\n    } catch (error) {\n      setSubmitResult({\n        success: false,\n        message: error.message\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  if (!formStructure) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading form...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: formStructure.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [formStructure.fields.map(field => /*#__PURE__*/_jsxDEV(FormField, {\n        field: field,\n        value: formData[field.name] || '',\n        onChange: handleFieldChange\n      }, field.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting...' : 'Submit'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), submitResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `alert ${submitResult.success ? 'success' : 'error'}`,\n      children: submitResult.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ContactForm, \"3HR4ABM/8xtO0KxY0wfgdH79GZ8=\");\n_c = ContactForm;\nexport default ContactForm;\nvar _c;\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"names":["React","useState","useEffect","getFormStructure","submitFormData","FormField","jsxDEV","_jsxDEV","ContactForm","_s","formStructure","setFormStructure","formData","setFormData","isSubmitting","setIsSubmitting","submitResult","setSubmitResult","fetchFormStructure","response","form","initialData","fields","forEach","field","name","error","console","handleFieldChange","fieldName","value","prev","handleSubmit","e","preventDefault","result","success","message","resetData","Object","keys","key","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","onSubmit","map","onChange","type","disabled","_c","$RefreshReg$"],"sources":["/Users/saiharshithasivalingala/Desktop/react-frontend/src/components/ContactForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getFormStructure, submitFormData } from '../services/api';\nimport FormField from './FormField';\n\nconst ContactForm = () => {\n  const [formStructure, setFormStructure] = useState(null);\n  const [formData, setFormData] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitResult, setSubmitResult] = useState(null);\n\n  useEffect(() => {\n    const fetchFormStructure = async () => {\n      try {\n        const response = await getFormStructure();\n        setFormStructure(response.form);\n        \n        // Initialize form data with empty values\n        const initialData = {};\n        response.form.fields.forEach(field => {\n          initialData[field.name] = '';\n        });\n        setFormData(initialData);\n      } catch (error) {\n        console.error('Error loading form:', error);\n      }\n    };\n\n    fetchFormStructure();\n  }, []);\n\n  const handleFieldChange = (fieldName, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [fieldName]: value\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSubmitResult(null);\n    \n    try {\n      const result = await submitFormData(formData);\n      setSubmitResult({ success: true, message: result.message });\n      // Reset form if submission was successful\n      const resetData = {};\n      Object.keys(formData).forEach(key => {\n        resetData[key] = '';\n      });\n      setFormData(resetData);\n    } catch (error) {\n      setSubmitResult({ success: false, message: error.message });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  if (!formStructure) {\n    return <div>Loading form...</div>;\n  }\n\n  return (\n    <div className=\"contact-form\">\n      <h1>{formStructure.title}</h1>\n      \n      <form onSubmit={handleSubmit}>\n        {formStructure.fields.map(field => (\n          <FormField\n            key={field.name}\n            field={field}\n            value={formData[field.name] || ''}\n            onChange={handleFieldChange}\n          />\n        ))}\n        \n        <button type=\"submit\" disabled={isSubmitting}>\n          {isSubmitting ? 'Submitting...' : 'Submit'}\n        </button>\n      </form>\n      \n      {submitResult && (\n        <div className={`alert ${submitResult.success ? 'success' : 'error'}`}>\n          {submitResult.message}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ContactForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}