name: Deploy Infrastructure

on:
  push:
    branches: [main]

env:
  AWS_REGION: us-east-2
  TF_VERSION: 1.5.0

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      id-token: write

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # - name: Run Linter
      #   run: |
      #     pip install flake8
      #     flake8 lambda/

      - name: Run Unit Tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/lambda
          cd lambda
          pip install pytest
          pip install -r requirements.txt
          pytest tests/ -v

      - name: Package Lambda Function
        run: |
          cd lambda
          pip install -r requirements.txt -t ./package
          cd package && zip -r ../lambda.zip .
          cd .. && zip -g lambda.zip app.py
          mv lambda.zip ../

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}
      
       - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}


      - name: Terraform Init
        run: cd terraform && terraform init

      - name: Terraform Validate
        run: cd terraform && terraform validate

      - name: Terraform Plan
        run: cd terraform && terraform plan

      - name: Terraform Apply
        run: cd terraform && terraform apply -auto-approve
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # - name: Install SAM CLI
      #   run: pip install aws-sam-cli

      # - name: SAM Deploy
      #   run: |
      #     sam deploy \
      #       --stack-name myapp \
      #       --region ${{ env.AWS_REGION }} \
      #       --capabilities CAPABILITY_IAM \
      #       --no-confirm-changeset
        # env:
        #   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Verify Deployment
        run: |
          echo "Testing API endpoint..."
          curl -s "$(terraform output -raw api_gateway_url)" | jq .